---
#
# Snapshot a VM to disk
#

- name: Load image and template name in variables
  set_fact:
    img_name: "{{ prefix }}{{ extra_prefix|default('') }}{{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_date_time.date }})"


- name: Make VM snapshot
  one_vm:
    instance_ids:
      - '{{ instance_uuid }}'
    state: poweredoff
    disk_saveas:
      name: "{{ img_name }}"
      disk_id: 0
    wait: yes
  become: no
  delegate_to: localhost


- name: Find out snapshot ID
  shell: |
    oneimage list -l ID,NAME --size id=6,name=100 | fgrep "{{ img_name }}" | (read id name _; echo -n "$id")
  register: snapshot_id
  delegate_to: localhost
  failed_when: 'not snapshot_id.stdout.strip()'


- name: 'Fix VM start template (local file): IMAGE_ID'
  lineinfile:
    path: '{{ tmpl_file }}'
    regexp: 'IMAGE_ID=".*",'
    line: 'IMAGE_ID="{{ snapshot_id.stdout }}",'
  delegate_to: localhost


- name: 'Fix VM start template (local file): NAME'
  lineinfile:
    path: '{{ tmpl_file }}'
    regexp: 'NAME=".*",'
    line: 'NAME="{{ img_name }}",'
  delegate_to: localhost


- name: Fix VM start template (ONE template)
  shell: |
    onetemplate create --verbose '{{ tmpl_file }}' \
          | egrep '^ID *:' \
          | cut -d: -f2
  register: template_id
  delegate_to: localhost
  failed_when: 'not template_id.stdout.strip()'


- name: Rename VM star template
  shell: |
    onetemplate rename '{{ template_id.stdout.strip() }}' '{{ img_name }}'
  delegate_to: localhost


- name: Delete local VM template file
  file:
    path: '{{ tmpl_file }}'
    state: absent
  delegate_to: localhost
