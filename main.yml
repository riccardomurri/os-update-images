---

- name: download official images
  tags:
    - download
  hosts: localhost
  gather_facts: no

  vars_files:
    - conf.yml

  tasks:
    - name: create new file `downloaded.yml`
      copy:
        dest: 'vars/downloaded.yml'
        content: |
          ---

    - include_tasks: 'tasks/download.yml'
      vars:
        source_url: '{{ img.source }}'
        source_file: '{{ img.source|basename }}'
        source_format: '{{ img.format|default("qcow2") }}'
        name: '{{ img.name }}'
        dest_file: '{{ img.source|basename|splitext|first }}.{{ dest_format }}'
        dest_format: '{{ format|default("qcow2") }}'
        use_virtio_scsi: '{{ img.use_virtio_scsi|default("yes") }}'
      with_items: '{{ images }}'
      loop_control:
        loop_var: img


- name: start VMs
  tags:
    - start
  hosts: localhost
  gather_facts: no

  vars_prompt:
    - name: 'keypair'
      prompt: 'Name of keypair to authorize for SSH connections'
      private: no

  tasks:

    # we cannot use `vars_files:` for this, as the file is parsed at Ansible
    # startup time, before the above play gets to modify it
    - include_vars:
        file: conf.yml

    - include_vars:
        file: 'downloaded.yml'
        name: uuid_of

    - include_tasks: 'tasks/{{cloud}}/start.yml'
      vars:
        name: '{{ img.name }}'
        uuid: '{{ uuid_of[img.name] }}'
        user: '{{ img.user }}'
        extra_plays: '{{ img.extra_plays|default([]) }}'
        extra_prefix: '{{ img.extra_prefix|default("") }}'
        install_python2: '{{ img.install_python2|default("no") }}'
      with_items: '{{ images }}'
      loop_control:
        loop_var: img


# this is a separate play so that the `gather_facts:` step runs on all the VMs
# that were created in the "start" phase
- name: update VM image
  tags:
    - update
  hosts: targets
  gather_facts: yes
  become: yes

  tasks:
    # we cannot use `vars_files:` for this, as the file is parsed at Ansible
    # startup time, before the above play gets to modify it
    - include_vars:
        file: conf.yml

    # - name: print info for debugging
    #   debug:
    #     var: hostvars

    - include_tasks: '{{ play }}'
      loop_control:
        loop_var: 'play'
      with_first_found:
        - '{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml'
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
        - 'default.yml'

    - include_tasks: '{{ play }}'
      loop_control:
        loop_var: 'play'
      with_items: '{{ extra_plays }}'


# this is a separate play to re-run the `gather_facts:` step;
# we want vars like `ansible_distribution_version` to be up-to-date
# in case the last steps changed it (e.g., minor release upgrade)
- name: make VM snapshot
  tags:
    - snapshot
  hosts: targets
  gather_facts: yes

  vars_prompt:
    - name: 'prefix'
      prompt: 'Prefix for the all new snapshot names'
      default: '*** '
      private: no

  tasks:
    # we cannot use `vars_files:` for this, as the file is parsed at Ansible
    # startup time, before the above play gets to modify it
    - include_vars:
        file: conf.yml

    - include_vars:
        file: 'downloaded.yml'
        name: uuid_of

    - import_tasks: 'tasks/cleanup.yml'
      become: yes

    - name: Run cloud-specific snapshot tasks
      include_tasks: 'tasks/{{cloud}}/snapshot.yml'


- name: stop VMs
  tags:
    - stop
  hosts: localhost
  gather_facts: no

  vars_files:
    - conf.yml

  tasks:

    # we cannot use `vars_files:` for this, as the file is parsed at Ansible
    # startup time, before the above play gets to modify it
    - include_vars:
        file: 'downloaded.yml'
        name: uuid_of

    - name: Run cloud-specific snapshot tasks
      include_tasks: 'tasks/{{cloud}}/stop.yml'
