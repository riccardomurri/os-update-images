---

- name: download official images
  hosts: localhost
  gather_facts: no

  vars_files:
    - conf.yml

  tasks:
    - include: 'tasks/download.yml'
      vars:
        source: '{{ img.source }}'
        dest: '{{ img.source|basename }}'
        format: '{{ img.format|default("qcow2") }}'
        name: '{{ img.name }}'
        raw: '{{ img.source|basename|splitext|first }}.raw'
        use_virtio_scsi: '{{ img.use_virtio_scsi|default("yes") }}'
      with_items: '{{ images }}'
      loop_control:
        loop_var: img


- name: start VMs
  hosts: localhost
  gather_facts: no

  vars:
    # uzh-only network
    network: c86b320c-9542-4032-a951-c8a068894cc2

  vars_prompt:
    - name: 'keypair'
      prompt: 'Name of OpenStack keypair to authorize for SSH connections'
      private: no

  tasks:

    # we cannot use `vars_files:` for this, as the file is parsed at Ansible
    # startup time, before the above play gets to modify it
    - include_vars:
        file: conf.yml

    - include: 'tasks/start.yml'
      vars:
        uuid: '{{ img.uuid }}'
        user: '{{ img.user }}'
        extra_plays: '{{ img.extra_plays|default([]) }}'
        extra_prefix: '{{ img.extra_prefix|default("") }}'
      with_items: '{{ images }}'
      loop_control:
        loop_var: img


# this is a separate play so that the `gather_facts:` step runs on all the VMs
# that were created in the "start" phase
- name: update VM image
  hosts: targets
  gather_facts: yes
  become: yes

  tasks:
    # we cannot use `vars_files:` for this, as the file is parsed at Ansible
    # startup time, before the above play gets to modify it
    - include_vars:
        file: conf.yml

    # - name: print info for debugging
    #   debug:
    #     var: hostvars

    - include: '{{ play }}'
      loop_control:
        loop_var: 'play'
      with_first_found:
        - '{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml'
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
        - 'default.yml'

    - include: '{{ play }}'
      loop_control:
        loop_var: 'play'
      with_items: '{{ extra_plays }}'


# this is a separate play to re-run the `gather_facts:` step;
# we want vars like `ansible_distribution_version` to be up-to-date
# in case the last steps changed it (e.g., minor release upgrade)
- name: make VM snapshot
  hosts: targets
  gather_facts: yes

  vars_prompt:
    - name: 'prefix'
      prompt: 'Prefix for the all new snapshot names'
      default: '*** '
      private: no

  tasks:

    - include: 'tasks/cleanup.yml'
      static: yes
      become: yes

    - name: make VM snapshot
      shell: |
        nova image-create --poll "sc-update-images-{{ uuid }}" "{{ prefix }}{{ extra_prefix|default('') }}{{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_date_time.date}})"
      become: no
      delegate_to: localhost

    - name: turn snapshot back into image
      shell: |
        openstack image unset \
          --property image_location \
          --property image_state \
          --property image_type \
          --property kernel_id \
          --property owner_id \
          --property user_id \
          --property ramdisk_id \
          --property hw_scsi_model \
          --property hw_disk_bus \
          "{{ prefix }}{{ extra_prefix|default('') }}{{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_date_time.date}})"
      become: no
      delegate_to: localhost


- name: stop VMs
  hosts: localhost
  gather_facts: no

  vars_files:
    - conf.yml

  tasks:

    - name: stop VM instance
      os_server:
        name: 'sc-update-images-{{ item.uuid }}'
        state: absent
        wait: yes
      with_items: '{{ images }}'
